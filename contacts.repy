"""
<Program>
  contacts.repy 
  Variables are mostly from: 
  http://www.mithril.com.au/android/doc/ContactsFacade.html
	
<Date Started>
  December 19th, 2013
	
<Author>
  Yanyan Zhuang
	
<Purpose>
  Trying to use the SL4A JSON bridge to read contacts info
	 
"""

dy_import_module_symbols("sensorutil")



def contacts_get(sl4a_socket, attributes = None):
  """
  <Purpose>
    Returns a list of all contacts. 
    
  <Arguments>
    sl4a_socket - the socket that has been established for 
                  RPC communication
    
  <Return>
    {"error":null,"id":0,"result":[{"_id":"1","primary_email":"6"},
    {"_id":"2","primary_email":"13"},
    {"_id":"3","primary_email":"20","name":"******"},
    {"_id":"4","primary_email":"26","name":"******"},...}
       
  """
  
  if attributes == None:
    result = json_rpc(sl4a_socket, "contactsGet")  
  else:
    result = json_rpc(sl4a_socket, "contactsGet", attributes)
  return result
  
  
  



def contacts_get_by_id(sl4a_socket, id_number):
  """
  <Purpose>
    Returns contacts by ID. 
    
  <Arguments>
    sl4a_socket - the socket that has been established for 
                  RPC communication
    id_number - Interger id
    
  <Return>
    {"error":null,"id":0,"result":{"_id":"30",
    "primary_email":"213","name":"******"}}
       
  """
  
  result = json_rpc(sl4a_socket, "contactsGetById", id_number)  
  return result
  
  
  
  
  

def contacts_get_attributes(sl4a_socket):
  """
  <Purpose>
    Returns a list of all possible attributes for contacts.
    
  <Arguments>
    sl4a_socket - the socket that has been established for 
                  RPC communication
    
  <Return>
    {"error":null,"id":0,"result":["times_contacted","custom_ringtone",
    "primary_organization","phonetic_name","status","label","number",
    "type","mode","last_time_contacted","display_name","im_handle","_id",
    "number_key","starred","primary_email","name","primary_phone",
    "im_account","notes","im_protocol","send_to_voicemail"]}
       
  """
  
  result = json_rpc(sl4a_socket, "contactsGetAttributes")  
  return result





def contacts_get_count(sl4a_socket):
  """
  <Purpose>
    Returns the number of contacts.
    
  <Arguments>
    sl4a_socket - the socket that has been established for 
                  RPC communication
    
  <Return>
    {"error":null,"id":0,"result":344}
       
  """
  
  result = json_rpc(sl4a_socket, "contactsGetCount")  
  return result






def contacts_get_ids(sl4a_socket):
  """
  <Purpose>
    Returns a List of all contact IDs.
    
  <Arguments>
    sl4a_socket - the socket that has been established for 
                  RPC communication
    
  <Return>
    {"error":null,"id":0,"result":[1,2,3,4,5,.....,344]}
       
  """
  
  result = json_rpc(sl4a_socket, "contactsGetIds")  
  return result

