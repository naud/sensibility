"""
test_sensors.repy -- trying to use the SL4A JSON bridge to read sensors

"""


dy_import_module_symbols("sensorutil")
dy_import_module_symbols("settings")

if callfunc=="initialize":
  try:
    ap_port = int(callargs[0])
  except:
    # Not castable (-> ValueError) or missing at all (-> IndexError) 
    usage()
    exitall()
  
  # set up connection to sl4a 
  sl4a_socket = openconnection("127.0.0.1", ap_port, "127.0.0.1", 12345, 5)
  
  while True:
    log("check the airplane mode setting:\n")
    result = settings_check_airplane_mode(sl4a_socket)
    log(result + '\n\n')
    
    log("check the ringer silent mode setting:\n")
    result = settings_check_ringer_silent_mode(sl4a_socket)
    log(result + '\n\n')
    
    log("check the screen is on or off:\n")
    result = settings_check_screen_on(sl4a_socket)
    log(result + '\n\n')
    
    log("get the maximum media volume:\n")
    result = settings_get_max_media_volume(sl4a_socket)
    log(result + '\n\n')
    
    log("get the maximum ringer volume:\n")
    result = settings_get_max_ringer_volume(sl4a_socket)
    log(result + '\n\n')
    
    log("get the current media volume:\n")
    result = settings_get_media_volume(sl4a_socket)
    log(result + '\n\n')
    
    log("get the current ringer volume:\n")
    result = settings_get_ringer_volume(sl4a_socket)
    log(result + '\n\n')
    
    log("get screen backlight brightness:\n")
    result = settings_get_screen_brightness(sl4a_socket)
    log(result + '\n\n')
    
    log("get screen timeout in seconds:\n")
    result = settings_get_screen_timeout(sl4a_socket)
    log(result + '\n\n')
    
    log("get vibration setting:\n")
    result = settings_get_vibrate_mode(sl4a_socket, True)
    log(result + '\n\n')
    
    log("get vibration setting:\n")
    result = settings_get_vibrate_mode(sl4a_socket, False)
    log(result + '\n\n')
    
    sleep(10)
    
  sl4a_socket.close()

